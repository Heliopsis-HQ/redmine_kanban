<% 
# Define some "helpers" here

def issue_status_pane(pane_name)
    selected_status = @settings['panes'][pane_name] && @settings['panes'][pane_name]['status'] ? @settings['panes'][pane_name]['status'].to_i : ''
    limit = @settings['panes'][pane_name] && @settings['panes'][pane_name]['limit'] ? @settings['panes'][pane_name]['limit'].to_i : ''
    status = content_tag(:p,
      content_tag(:label, l("kanban_label_#{pane_name}_pane".to_sym)) + 
      select_tag("settings[panes][#{pane_name}][status]",
                 content_tag(:option, '') +
                 options_from_collection_for_select(IssueStatus.all,
                                                    :id,
                                                    :name,
                                                    selected_status)) + 

      content_tag(:span, l(:kanban_label_limit), :style => "padding: 0 0.5em 0 3em;") + 
      text_field_tag("settings[panes][#{pane_name}][limit]", limit ))
      return status

end
%>

<fieldset>
  <%= content_tag(:legend, l(:kanban_text_general_settings)) %>

  <p>
    <%= content_tag(:label, l(:kanban_label_user_help)) %>
    <%= text_area_tag('settings[user_help]', @settings['user_help'], :class => 'wiki-edit', :rows => 10) %>
    <%= wikitoolbar_for 'settings_user_help' %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_staff_role)) %>
    <%= select_tag("settings[staff_role]",
          content_tag(:option, '') +
          options_from_collection_for_select(Role.all, :id, :name, @settings['staff_role'].to_i)) %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_management_group)) %>
    <%= select_tag("settings[management_group]",
          content_tag(:option, '') +
          options_from_collection_for_select(Group.all, :id, :lastname, @settings['management_group'].to_i)) %>
    <%= content_tag(:span, l(:kanban_text_management_group_help)) %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_project_level)) %>
    <%= text_field_tag("settings[project_level]", @settings['project_level']) %>
    <br />
    <%= content_tag(:span, l(:kanban_text_project_level_help)) %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_simple_issue_popup_form)) %>
    <%= check_box_tag("settings[simple_issue_popup_form]", "1", @settings['simple_issue_popup_form'].to_s == "1" ) %>
    <br />
    <%= content_tag(:span, l(:kanban_text_simple_issue_popup_form_help)) %>
  </p>
</fieldset>

<fieldset>
  <%= content_tag(:legend, l(:kanban_text_pane_settings)) %>

  <%= content_tag(:p, l(:kanban_text_pane_settings_description)) %>

  <%= issue_status_pane('incoming') %>
  <%= issue_status_pane('backlog') %>

  <p>
    <%
      if @settings['panes']['backlog']
        status = IssueStatus.find_by_id(@settings['panes']['backlog']['status'].to_i)
      else
        status = nil
      end

     @settings['panes']['quick-tasks'] = {'limit' => 5 } unless @settings['panes']['quick-tasks']
    %>
    <%= content_tag(:label, l('kanban_label_quick-tasks_pane'.to_sym)) %>
    <%= h status.name if status %>

    <%= content_tag(:span, l(:kanban_label_limit), :style => "padding: 0 0.5em 0 3em;") %> 
    <%= text_field_tag("settings[panes][quick-tasks][limit]", @settings['panes']['quick-tasks']['limit']) %>
  </p>

  <%= issue_status_pane('selected') %>
  <%= issue_status_pane('active') %>
  <%= issue_status_pane('testing') %>
  <p>
    <% finished_status = @settings['panes']['finished'] && @settings['panes']['finished']['status'] ? @settings['panes']['finished']['status'].to_i : ''    %>
    <% finished_limit = @settings['panes']['finished'] && @settings['panes']['finished']['limit'] ? @settings['panes']['finished']['limit'].to_f : '' %>

    <%= content_tag(:label, l("kanban_label_finished_pane".to_sym)) + 
      select_tag("settings[panes][finished][status]",
                 content_tag(:option, '') +
                 options_from_collection_for_select(IssueStatus.all(:conditions => {:is_closed => true}),
                                                    :id,
                                                    :name,
                                                    finished_status)) %>

    <%= content_tag(:span, l(:kanban_label_day_limit), :style => "padding: 0 0.5em 0 3em;") %>
    <%= text_field_tag("settings[panes][finished][limit]", finished_limit ) %>
  </p>

  <p>
    <% canceled_status = @settings['panes']['canceled'] && @settings['panes']['canceled']['status'] ? @settings['panes']['canceled']['status'].to_i : ''    %>
    <% canceled_limit = @settings['panes']['canceled'] && @settings['panes']['canceled']['limit'] ? @settings['panes']['canceled']['limit'].to_f : '' %>

    <%= content_tag(:label, l("kanban_label_canceled_pane".to_sym)) + 
      select_tag("settings[panes][canceled][status]",
                 content_tag(:option, '') +
                 options_from_collection_for_select(IssueStatus.all(:conditions => {:is_closed => true}),
                                                    :id,
                                                    :name,
                                                    canceled_status)) %>

    <%= content_tag(:span, l(:kanban_label_day_limit), :style => "padding: 0 0.5em 0 3em;") %>
    <%= text_field_tag("settings[panes][canceled][limit]", canceled_limit ) %>
  </p>

</fieldset>

<fieldset>
  <%= content_tag(:legend, l(:kanban_text_workflow_settings)) %>

  <%= content_tag(:p, l(:kanban_text_workflow_settings_description)) %>

  <p>
    <%= content_tag(:label, l(:kanban_label_incoming_priority_change)) %>
    <% incoming_excluded_priorities = @settings['panes']['incoming'] && @settings['panes']['incoming']['excluded_priorities'] ? @settings['panes']['incoming']['excluded_priorities'].collect(&:to_i) : []  %>

    <%= select_tag("settings[panes][incoming][excluded_priorities]",
                   content_tag(:option, '') +
                   options_from_collection_for_select(IssuePriority.all,
                                                    :id,
                                                    :name,
                                                    incoming_excluded_priorities),
                   :multiple => true) %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_incoming_project_change)) %>
    <% incoming_excluded_projects = @settings['panes']['incoming'] && @settings['panes']['incoming']['excluded_projects'] ? @settings['panes']['incoming']['excluded_projects'].collect(&:to_i) : []  %>

    <%= select_tag("settings[panes][incoming][excluded_projects]",
                   content_tag(:option, '') +
                   options_from_collection_for_select(Project.all,
                                                    :id,
                                                    :name,
                                                    incoming_excluded_projects),
                   :multiple => true) %>
  </p>

  <p>
    <%= content_tag(:label, l(:kanban_label_incoming_url)) %>
    <%= text_field_tag('settings[panes][incoming][url]', @settings['panes']['incoming']['url']) %>
  </p>
</fieldset>
